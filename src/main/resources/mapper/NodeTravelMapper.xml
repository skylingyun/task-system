<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ybz.dao.NodeTravelMapper">
  <resultMap id="BaseResultMap" type="com.ybz.entity.NodeTravel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pk" jdbcType="VARCHAR" property="pk" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="from_city" jdbcType="VARCHAR" property="fromCity" />
    <result column="to_city" jdbcType="VARCHAR" property="toCity" />
    <result column="travel_date" jdbcType="DATE" property="travelDate" />
    <result column="travel_way" jdbcType="VARCHAR" property="travelWay" />
    <result column="expense" jdbcType="BIT" property="expense" />
    <result column="valid" jdbcType="BIT" property="valid" />
    <result column="imagesystemtype" jdbcType="VARCHAR" property="imagesystemtype" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="ts" jdbcType="TIMESTAMP" property="ts" />
    <result column="expensetype" jdbcType="VARCHAR" property="expensetype" />
    <result column="over_standard" jdbcType="BIT" property="overStandard" />
    <result column="seat" jdbcType="VARCHAR" property="seat" />
    <result column="seatpk" jdbcType="VARCHAR" property="seatpk" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="item_pk" jdbcType="VARCHAR" property="itemPk" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="szitem_pk" jdbcType="VARCHAR" property="szitemPk" />
    <result column="szitem_name" jdbcType="VARCHAR" property="szitemName" />
    <result column="reduction_amount" jdbcType="DOUBLE" property="reductionAmount" />
    <result column="reduction_info" jdbcType="VARCHAR" property="reductionInfo" />
    <result column="reduction_time" jdbcType="TIMESTAMP" property="reductionTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ybz.entity.NodeTravelWithBLOBs">
    <result column="note" jdbcType="LONGVARCHAR" property="note" />
    <result column="filepath" jdbcType="LONGVARCHAR" property="filepath" />
    <result column="tag_content" jdbcType="LONGVARCHAR" property="tagContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pk, user_id, money, from_city, to_city, travel_date, travel_way, expense, valid, 
    imagesystemtype, category, ts, expensetype, over_standard, seat, seatpk, start_date, 
    end_date, item_pk, item_name, szitem_pk, szitem_name, reduction_amount, reduction_info, 
    reduction_time
  </sql>
  <sql id="Blob_Column_List">
    note, filepath, tag_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ybz.entity.NodeTravelExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from node_travel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ybz.entity.NodeTravelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from node_travel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from node_travel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from node_travel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ybz.entity.NodeTravelExample">
    delete from node_travel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ybz.entity.NodeTravelWithBLOBs">
    insert into node_travel (id, pk, user_id, 
      money, from_city, to_city, 
      travel_date, travel_way, expense, 
      valid, imagesystemtype, category, 
      ts, expensetype, over_standard, 
      seat, seatpk, start_date, 
      end_date, item_pk, item_name, 
      szitem_pk, szitem_name, reduction_amount, 
      reduction_info, reduction_time, note, 
      filepath, tag_content)
    values (#{id,jdbcType=INTEGER}, #{pk,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{money,jdbcType=DOUBLE}, #{fromCity,jdbcType=VARCHAR}, #{toCity,jdbcType=VARCHAR}, 
      #{travelDate,jdbcType=DATE}, #{travelWay,jdbcType=VARCHAR}, #{expense,jdbcType=BIT}, 
      #{valid,jdbcType=BIT}, #{imagesystemtype,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{ts,jdbcType=TIMESTAMP}, #{expensetype,jdbcType=VARCHAR}, #{overStandard,jdbcType=BIT}, 
      #{seat,jdbcType=VARCHAR}, #{seatpk,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, 
      #{endDate,jdbcType=DATE}, #{itemPk,jdbcType=VARCHAR}, #{itemName,jdbcType=VARCHAR}, 
      #{szitemPk,jdbcType=VARCHAR}, #{szitemName,jdbcType=VARCHAR}, #{reductionAmount,jdbcType=DOUBLE}, 
      #{reductionInfo,jdbcType=VARCHAR}, #{reductionTime,jdbcType=TIMESTAMP}, #{note,jdbcType=LONGVARCHAR}, 
      #{filepath,jdbcType=LONGVARCHAR}, #{tagContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ybz.entity.NodeTravelWithBLOBs">
    insert into node_travel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pk != null">
        pk,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="fromCity != null">
        from_city,
      </if>
      <if test="toCity != null">
        to_city,
      </if>
      <if test="travelDate != null">
        travel_date,
      </if>
      <if test="travelWay != null">
        travel_way,
      </if>
      <if test="expense != null">
        expense,
      </if>
      <if test="valid != null">
        valid,
      </if>
      <if test="imagesystemtype != null">
        imagesystemtype,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="ts != null">
        ts,
      </if>
      <if test="expensetype != null">
        expensetype,
      </if>
      <if test="overStandard != null">
        over_standard,
      </if>
      <if test="seat != null">
        seat,
      </if>
      <if test="seatpk != null">
        seatpk,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="itemPk != null">
        item_pk,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="szitemPk != null">
        szitem_pk,
      </if>
      <if test="szitemName != null">
        szitem_name,
      </if>
      <if test="reductionAmount != null">
        reduction_amount,
      </if>
      <if test="reductionInfo != null">
        reduction_info,
      </if>
      <if test="reductionTime != null">
        reduction_time,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="filepath != null">
        filepath,
      </if>
      <if test="tagContent != null">
        tag_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pk != null">
        #{pk,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="fromCity != null">
        #{fromCity,jdbcType=VARCHAR},
      </if>
      <if test="toCity != null">
        #{toCity,jdbcType=VARCHAR},
      </if>
      <if test="travelDate != null">
        #{travelDate,jdbcType=DATE},
      </if>
      <if test="travelWay != null">
        #{travelWay,jdbcType=VARCHAR},
      </if>
      <if test="expense != null">
        #{expense,jdbcType=BIT},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=BIT},
      </if>
      <if test="imagesystemtype != null">
        #{imagesystemtype,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="ts != null">
        #{ts,jdbcType=TIMESTAMP},
      </if>
      <if test="expensetype != null">
        #{expensetype,jdbcType=VARCHAR},
      </if>
      <if test="overStandard != null">
        #{overStandard,jdbcType=BIT},
      </if>
      <if test="seat != null">
        #{seat,jdbcType=VARCHAR},
      </if>
      <if test="seatpk != null">
        #{seatpk,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="itemPk != null">
        #{itemPk,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="szitemPk != null">
        #{szitemPk,jdbcType=VARCHAR},
      </if>
      <if test="szitemName != null">
        #{szitemName,jdbcType=VARCHAR},
      </if>
      <if test="reductionAmount != null">
        #{reductionAmount,jdbcType=DOUBLE},
      </if>
      <if test="reductionInfo != null">
        #{reductionInfo,jdbcType=VARCHAR},
      </if>
      <if test="reductionTime != null">
        #{reductionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        #{note,jdbcType=LONGVARCHAR},
      </if>
      <if test="filepath != null">
        #{filepath,jdbcType=LONGVARCHAR},
      </if>
      <if test="tagContent != null">
        #{tagContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ybz.entity.NodeTravelExample" resultType="java.lang.Integer">
    select count(*) from node_travel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update node_travel
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pk != null">
        pk = #{record.pk,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.fromCity != null">
        from_city = #{record.fromCity,jdbcType=VARCHAR},
      </if>
      <if test="record.toCity != null">
        to_city = #{record.toCity,jdbcType=VARCHAR},
      </if>
      <if test="record.travelDate != null">
        travel_date = #{record.travelDate,jdbcType=DATE},
      </if>
      <if test="record.travelWay != null">
        travel_way = #{record.travelWay,jdbcType=VARCHAR},
      </if>
      <if test="record.expense != null">
        expense = #{record.expense,jdbcType=BIT},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=BIT},
      </if>
      <if test="record.imagesystemtype != null">
        imagesystemtype = #{record.imagesystemtype,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.ts != null">
        ts = #{record.ts,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expensetype != null">
        expensetype = #{record.expensetype,jdbcType=VARCHAR},
      </if>
      <if test="record.overStandard != null">
        over_standard = #{record.overStandard,jdbcType=BIT},
      </if>
      <if test="record.seat != null">
        seat = #{record.seat,jdbcType=VARCHAR},
      </if>
      <if test="record.seatpk != null">
        seatpk = #{record.seatpk,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.itemPk != null">
        item_pk = #{record.itemPk,jdbcType=VARCHAR},
      </if>
      <if test="record.itemName != null">
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.szitemPk != null">
        szitem_pk = #{record.szitemPk,jdbcType=VARCHAR},
      </if>
      <if test="record.szitemName != null">
        szitem_name = #{record.szitemName,jdbcType=VARCHAR},
      </if>
      <if test="record.reductionAmount != null">
        reduction_amount = #{record.reductionAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.reductionInfo != null">
        reduction_info = #{record.reductionInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.reductionTime != null">
        reduction_time = #{record.reductionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.filepath != null">
        filepath = #{record.filepath,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.tagContent != null">
        tag_content = #{record.tagContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update node_travel
    set id = #{record.id,jdbcType=INTEGER},
      pk = #{record.pk,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      from_city = #{record.fromCity,jdbcType=VARCHAR},
      to_city = #{record.toCity,jdbcType=VARCHAR},
      travel_date = #{record.travelDate,jdbcType=DATE},
      travel_way = #{record.travelWay,jdbcType=VARCHAR},
      expense = #{record.expense,jdbcType=BIT},
      valid = #{record.valid,jdbcType=BIT},
      imagesystemtype = #{record.imagesystemtype,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      ts = #{record.ts,jdbcType=TIMESTAMP},
      expensetype = #{record.expensetype,jdbcType=VARCHAR},
      over_standard = #{record.overStandard,jdbcType=BIT},
      seat = #{record.seat,jdbcType=VARCHAR},
      seatpk = #{record.seatpk,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      item_pk = #{record.itemPk,jdbcType=VARCHAR},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      szitem_pk = #{record.szitemPk,jdbcType=VARCHAR},
      szitem_name = #{record.szitemName,jdbcType=VARCHAR},
      reduction_amount = #{record.reductionAmount,jdbcType=DOUBLE},
      reduction_info = #{record.reductionInfo,jdbcType=VARCHAR},
      reduction_time = #{record.reductionTime,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=LONGVARCHAR},
      filepath = #{record.filepath,jdbcType=LONGVARCHAR},
      tag_content = #{record.tagContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update node_travel
    set id = #{record.id,jdbcType=INTEGER},
      pk = #{record.pk,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      from_city = #{record.fromCity,jdbcType=VARCHAR},
      to_city = #{record.toCity,jdbcType=VARCHAR},
      travel_date = #{record.travelDate,jdbcType=DATE},
      travel_way = #{record.travelWay,jdbcType=VARCHAR},
      expense = #{record.expense,jdbcType=BIT},
      valid = #{record.valid,jdbcType=BIT},
      imagesystemtype = #{record.imagesystemtype,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      ts = #{record.ts,jdbcType=TIMESTAMP},
      expensetype = #{record.expensetype,jdbcType=VARCHAR},
      over_standard = #{record.overStandard,jdbcType=BIT},
      seat = #{record.seat,jdbcType=VARCHAR},
      seatpk = #{record.seatpk,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      item_pk = #{record.itemPk,jdbcType=VARCHAR},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      szitem_pk = #{record.szitemPk,jdbcType=VARCHAR},
      szitem_name = #{record.szitemName,jdbcType=VARCHAR},
      reduction_amount = #{record.reductionAmount,jdbcType=DOUBLE},
      reduction_info = #{record.reductionInfo,jdbcType=VARCHAR},
      reduction_time = #{record.reductionTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ybz.entity.NodeTravelWithBLOBs">
    update node_travel
    <set>
      <if test="pk != null">
        pk = #{pk,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="fromCity != null">
        from_city = #{fromCity,jdbcType=VARCHAR},
      </if>
      <if test="toCity != null">
        to_city = #{toCity,jdbcType=VARCHAR},
      </if>
      <if test="travelDate != null">
        travel_date = #{travelDate,jdbcType=DATE},
      </if>
      <if test="travelWay != null">
        travel_way = #{travelWay,jdbcType=VARCHAR},
      </if>
      <if test="expense != null">
        expense = #{expense,jdbcType=BIT},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=BIT},
      </if>
      <if test="imagesystemtype != null">
        imagesystemtype = #{imagesystemtype,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="ts != null">
        ts = #{ts,jdbcType=TIMESTAMP},
      </if>
      <if test="expensetype != null">
        expensetype = #{expensetype,jdbcType=VARCHAR},
      </if>
      <if test="overStandard != null">
        over_standard = #{overStandard,jdbcType=BIT},
      </if>
      <if test="seat != null">
        seat = #{seat,jdbcType=VARCHAR},
      </if>
      <if test="seatpk != null">
        seatpk = #{seatpk,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="itemPk != null">
        item_pk = #{itemPk,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="szitemPk != null">
        szitem_pk = #{szitemPk,jdbcType=VARCHAR},
      </if>
      <if test="szitemName != null">
        szitem_name = #{szitemName,jdbcType=VARCHAR},
      </if>
      <if test="reductionAmount != null">
        reduction_amount = #{reductionAmount,jdbcType=DOUBLE},
      </if>
      <if test="reductionInfo != null">
        reduction_info = #{reductionInfo,jdbcType=VARCHAR},
      </if>
      <if test="reductionTime != null">
        reduction_time = #{reductionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=LONGVARCHAR},
      </if>
      <if test="filepath != null">
        filepath = #{filepath,jdbcType=LONGVARCHAR},
      </if>
      <if test="tagContent != null">
        tag_content = #{tagContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ybz.entity.NodeTravelWithBLOBs">
    update node_travel
    set pk = #{pk,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      from_city = #{fromCity,jdbcType=VARCHAR},
      to_city = #{toCity,jdbcType=VARCHAR},
      travel_date = #{travelDate,jdbcType=DATE},
      travel_way = #{travelWay,jdbcType=VARCHAR},
      expense = #{expense,jdbcType=BIT},
      valid = #{valid,jdbcType=BIT},
      imagesystemtype = #{imagesystemtype,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      ts = #{ts,jdbcType=TIMESTAMP},
      expensetype = #{expensetype,jdbcType=VARCHAR},
      over_standard = #{overStandard,jdbcType=BIT},
      seat = #{seat,jdbcType=VARCHAR},
      seatpk = #{seatpk,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      item_pk = #{itemPk,jdbcType=VARCHAR},
      item_name = #{itemName,jdbcType=VARCHAR},
      szitem_pk = #{szitemPk,jdbcType=VARCHAR},
      szitem_name = #{szitemName,jdbcType=VARCHAR},
      reduction_amount = #{reductionAmount,jdbcType=DOUBLE},
      reduction_info = #{reductionInfo,jdbcType=VARCHAR},
      reduction_time = #{reductionTime,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=LONGVARCHAR},
      filepath = #{filepath,jdbcType=LONGVARCHAR},
      tag_content = #{tagContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ybz.entity.NodeTravel">
    update node_travel
    set pk = #{pk,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      from_city = #{fromCity,jdbcType=VARCHAR},
      to_city = #{toCity,jdbcType=VARCHAR},
      travel_date = #{travelDate,jdbcType=DATE},
      travel_way = #{travelWay,jdbcType=VARCHAR},
      expense = #{expense,jdbcType=BIT},
      valid = #{valid,jdbcType=BIT},
      imagesystemtype = #{imagesystemtype,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      ts = #{ts,jdbcType=TIMESTAMP},
      expensetype = #{expensetype,jdbcType=VARCHAR},
      over_standard = #{overStandard,jdbcType=BIT},
      seat = #{seat,jdbcType=VARCHAR},
      seatpk = #{seatpk,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      item_pk = #{itemPk,jdbcType=VARCHAR},
      item_name = #{itemName,jdbcType=VARCHAR},
      szitem_pk = #{szitemPk,jdbcType=VARCHAR},
      szitem_name = #{szitemName,jdbcType=VARCHAR},
      reduction_amount = #{reductionAmount,jdbcType=DOUBLE},
      reduction_info = #{reductionInfo,jdbcType=VARCHAR},
      reduction_time = #{reductionTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="queryMoneyByDate" parameterType="com.ybz.entity.NodeTravelExample" resultType="java.lang.Double">
        select SUM(money) from node_travel
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
</mapper>